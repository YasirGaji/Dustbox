{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/hooks/use-http.js","lib/lib/api.js","components/comments/NewCommentForm.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","onClick","MainNavigation","styles","header","logo","nav","to","exact","activeClassName","active","Layout","Style","main","children","NewQuotes","React","lazy","AllQuotes","NotFound","QuoteDetail","App","fallback","path","component","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e065691e.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__FB6eH\",\"logo\":\"MainNavigation_logo__2TsqO\",\"nav\":\"MainNavigation_nav__2MKrS\",\"active\":\"MainNavigation_active__1qUzH\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-4a5c5-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2dxEH\",\"loading\":\"NewCommentForm_loading__1v-aW\",\"control\":\"NewCommentForm_control__3eprU\",\"actions\":\"NewCommentForm_actions__37Mxs\"};","import { useRef, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/hooks/use-http';\nimport { addComment } from '../../lib/lib/api';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  // const params = useParams();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: {text: enteredText}, quoteId: props.quoteId }); // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback (() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>;\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <div className='centered'>\n      <p>No comments yet.</p>\n    </div>;\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments} \n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3ZO3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1I3uN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1-rMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2PhhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2ZDzW\"};","import React from 'react';\r\nimport styles from './MainNavigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction MainNavigation() {\r\n  return (\r\n    <>\r\n      <header className={styles.header}>\r\n        <div className={styles.logo}>Great Quotes</div>\r\n\r\n        <nav className={styles.nav}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\" exact activeClassName={styles.active}>All Quotes</NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/new-quote\" exact activeClassName={styles.active}>Add new Quotes</NavLink>\r\n            </li>\r\n          </ul> \r\n        </nav>\r\n      </header> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainNavigation","import React from 'react';\r\nimport Style from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={Style.main}>{props.children}</main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout","import React, { Suspense } from 'react';\nimport{ Route, Switch } from 'react-router-dom';\nimport Comments from './components/comments/Comments';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\nconst NewQuotes = React.lazy(() => import('./pages/NewQuotes'));\nconst AllQuotes = React.lazy(() => import('./pages/AllQuotes'));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'));\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <Suspense fallback={\n          <div className='centered'>\n            <LoadingSpinner />\n          </div>\n        }>\n          <Switch>\n            <Route exact path=\"/\" component={AllQuotes} />\n\n            <Route path='/quotes' exact>\n              <AllQuotes />\n            </Route>\n\n            <Route path='/quotes/:quoteId' exact>\n              <QuoteDetail />\n            </Route>\n\n            <Route path='/new-quote' exact>\n              <NewQuotes />\n            </Route>\n\n            <Route path='/comments' exact>\n              <Comments />\n            </Route>\n\n            <Route path='*'>\n              <NotFound />\n            </Route> \n\n          </Switch>\n        </Suspense>\n      </Layout>  \n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  );\n"],"sourceRoot":""}