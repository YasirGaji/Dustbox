{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","match","useRouteMatch","params","useParams","quoteId","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","path","exact","to","url","Comments"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,gGCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,wBC6EVC,UA7Df,WACE,IAAMC,EAAQC,cACRC,EAASC,cAEPC,EAAYF,EAAZE,QAER,EAA0DC,YAAQC,KAAgB,EAAMJ,EAAOE,SAAvFG,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAmBC,EAAhD,EAAgDA,MAQhD,OAJAC,qBAAU,WACRL,EAAYH,KACX,CAACG,EAAaH,IAEF,YAAXI,EAEA,qBAAKd,UAAU,WAAf,SACE,cAACmB,EAAA,EAAD,MAKFF,EAEA,qBAAKjB,UAAU,mBAAf,SACGiB,IAKFF,EAAYZ,KAKf,qCACE,cAAC,EAAD,CAAkBA,KAAMY,EAAYZ,KAAMC,OAAQW,EAAYX,SAE9D,cAAC,IAAD,CAAOgB,KAAMd,EAAMc,KAAMC,OAAK,EAA9B,SACE,qBAAKrB,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYsB,GAAE,UAAKhB,EAAMiB,IAAX,aAA9B,+BAaJ,cAAC,IAAD,CAAOH,KAAI,UAAKd,EAAMc,KAAX,aAAX,SACE,cAACI,EAAA,EAAD,SAvBG","file":"static/js/5.e428202b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1-ovA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react'\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom'\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'; \r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport { getSingleQuote } from '../lib/lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n// const DUMMY_QUOTES = [\r\n//   {\r\n//     id: 'q1',\r\n//     author: 'Oscar Wilde',\r\n//     text: 'Be yourself; everyone else is already taken.'\r\n//   },\r\n\r\n//   {\r\n//     id: 'q2',\r\n//     author: 'loco',\r\n//     text: 'I have nothing to declare except my genius'\r\n//   }\r\n// ] - To be used in place of the realtime database\r\n\r\nfunction QuoteDetail() {\r\n  const match = useRouteMatch()\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true, params.quoteId);\r\n\r\n  // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId); - To be used in place of the realtime database\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className='centered focused'>\r\n        {error}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <div>Quote not found</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      {/* <Routes>\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n      </Routes> \r\n      --- To be used when react router dom is on v6*/}\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"],"sourceRoot":""}